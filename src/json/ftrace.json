{
    "ftrace": {
        "build": "make",
        "tests": [
            {
                "Error-Handling": [
                    {
                        "name": "Bad argument",
                        "command": "./ftrace not_working",
                        "output": "*",
                        "return": 84
                    },
                    {
                        "name": "Correct argument",
                        "command": "./ftrace $BINARY/write",
                        "output": "*",
                        "return": 0
                    },
                    {
                        "name": "Not enough arguments",
                        "command": "./ftrace",
                        "output": "*",
                        "return": 84
                    },
                    {
                        "name": "Directory as argument",
                        "command": "./ftrace /tmp",
                        "output": "*",
                        "return": 84
                    },
                    {
                        "name": "Non-executable file",
                        "command": "./ftrace /etc/passwd",
                        "output": "*",
                        "return": 84
                    }
                ],
                "Syscall": [
                    {
                        "name": "Basic Syscall",
                        "command": "./ftrace $BINARY/write",
                        "std": "stderr",
                        "grep": "Syscall write(0x1",
                        "return": 0
                    },
                    {
                        "name": "Basic Syscall, looking for return value",
                        "command": "./ftrace $BINARY/write",
                        "std": "stderr",
                        "grep": " = 0xd",
                        "return": 0
                    },
                    {
                        "name": "Basic Syscall, in functions",
                        "command": "./ftrace $BINARY/putstr_main",
                        "std": "stderr",
                        "grep": "Syscall write(0x1",
                        "return": 0
                    },
                    {
                        "name": "Basic Syscall, in functions, looking for return value",
                        "command": "./ftrace $BINARY/putstr_main",
                        "std": "stderr",
                        "grep": " = 0x3",
                        "return": 0
                    }
                ],
                "Functions-Basics": [
                    {
                        "name": "Entering Function",
                        "command": "./ftrace $BINARY/putstr_main",
                        "std": "stderr",
                        "grep": "Entering function my_putstr",
                        "return": 0
                    },
                    {
                        "name": "Leaving Function",
                        "command": "./ftrace $BINARY/putstr_main",
                        "std": "stderr",
                        "grep": "Leaving function my_putstr",
                        "return": 0
                    },
                    {
                        "name": "Main Function Entering",
                        "command": "./ftrace $BINARY/write",
                        "std": "stderr",
                        "grep": "Entering function main",
                        "return": 0
                    },
                    {
                        "name": "Main Function Leaving",
                        "command": "./ftrace $BINARY/write",
                        "std": "stderr",
                        "grep": "Leaving function main",
                        "return": 0
                    }
                ],
                "Complex-Functions": [
                    {
                        "name": "Recursive function",
                        "command": "./ftrace $BINARY/recursive",
                        "std": "stderr",
                        "grep": "Entering function recursive_print",
                        "return": 0
                    }
                ],
                "Signal-Handling": [
                    {
                        "name": "Signal Reception SIGWINCH",
                        "command": "./ftrace $BINARY/signal_sigwinch",
                        "std": "stderr",
                        "grep": "Received signal SIGWINCH",
                        "return": 0
                    },
                    {
                        "name": "Signal Reception SIGUSER1",
                        "command": "./ftrace $BINARY/signal_sigusr1",
                        "std": "stderr",
                        "grep": "Received signal SIGUSR1",
                        "return": 0
                    },
                    {
                        "name": "Signal Reception SIGUSER2",
                        "command": "./ftrace $BINARY/signal_sigusr2",
                        "std": "stderr",
                        "grep": "Received signal SIGUSR2",
                        "return": 0
                    },
                    {
                        "name": "Signal Reception SIGALRM",
                        "command": "./ftrace $BINARY/signal_sigalrm",
                        "std": "stderr",
                        "grep": "Received signal SIGALRM",
                        "return": 0
                    }
                ],
                "Shared-Libraries": [
                    {
                        "name": "External function call",
                        "command": "./ftrace $BINARY/lib_user",
                        "std": "stderr",
                        "grep": "Entering function.*@libc.so",
                        "return": 0
                    },
                    {
                        "name": "Dynamic library loading",
                        "command": "./ftrace $BINARY/dlopen_test",
                        "std": "stderr",
                        "grep": "Syscall open",
                        "return": 0
                    }
                ]
            }
        ]
    }
}
